{"ast":null,"code":"var _jsxFileName = \"/home/anas/Documents/axiom-bootcamp/Tasks/expense_tracker/frontEnd/src/context/GlobalState.js\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { createContext, useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\nimport AppReducer from \"./AppReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  transaction: []\n};\nexport const ValueContext = /*#__PURE__*/createContext(initialState);\nexport const ValueProvider = ({\n  children\n}) => {\n  _s();\n\n  let [state, dispatch] = useReducer(AppReducer, initialState);\n\n  async function getTransaction() {\n    const getTrans = await axios.get(\"http://localhost:4000/api/v1/transactions/\");\n    dispatch({\n      type: \"GET\",\n      payload: getTrans.data.transaction\n    });\n  }\n\n  async function newTransaction(newTrans) {\n    const addTrans = await axios.post(\"http://localhost:4000/api/v1/transactions/\", {\n      text: newTrans.text,\n      amount: newTrans.amount\n    });\n    dispatch({\n      type: \"ADD\",\n      payload: addTrans.data.transaction\n    });\n  }\n\n  async function deleteTransaction(id) {\n    const delTrans = await axios.delete(`http://localhost:4000/api/v1/transactions/${id}`);\n    dispatch({\n      type: \"DELETE\",\n      payload: delTrans.data.transaction._id\n    });\n  }\n\n  useEffect(() => {\n    getTransaction();\n  }, [initialState.transaction]);\n  return /*#__PURE__*/_jsxDEV(ValueContext.Provider, {\n    value: {\n      transaction: state.transaction,\n      getTransaction,\n      newTransaction,\n      deleteTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ValueProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = ValueProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValueProvider\");","map":{"version":3,"sources":["/home/anas/Documents/axiom-bootcamp/Tasks/expense_tracker/frontEnd/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useEffect","axios","AppReducer","initialState","transaction","ValueContext","ValueProvider","children","state","dispatch","getTransaction","getTrans","get","type","payload","data","newTransaction","newTrans","addTrans","post","text","amount","deleteTransaction","id","delTrans","delete","_id"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE;AADM,CAArB;AAGA,OAAO,MAAMC,YAAY,gBAAGP,aAAa,CAACK,YAAD,CAAlC;AAEP,OAAO,MAAMG,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC7C,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAACG,UAAD,EAAaC,YAAb,CAAlC;;AAEA,iBAAeO,cAAf,GAAgC;AAC9B,UAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CACrB,4CADqB,CAAvB;AAGAH,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcX;AAAtC,KAAD,CAAR;AACD;;AAED,iBAAeY,cAAf,CAA8BC,QAA9B,EAAwC;AACtC,UAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CACrB,4CADqB,EAErB;AACEC,MAAAA,IAAI,EAAEH,QAAQ,CAACG,IADjB;AAEEC,MAAAA,MAAM,EAAEJ,QAAQ,CAACI;AAFnB,KAFqB,CAAvB;AAOAZ,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,OAAO,EAAEI,QAAQ,CAACH,IAAT,CAAcX;AAAtC,KAAD,CAAR;AACD;;AACD,iBAAekB,iBAAf,CAAiCC,EAAjC,EAAqC;AACnC,UAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,MAAN,CACpB,6CAA4CF,EAAG,EAD3B,CAAvB;AAGAd,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAEU,QAAQ,CAACT,IAAT,CAAcX,WAAd,CAA0BsB;AAArD,KAAD,CAAR;AACD;;AACD1B,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,cAAc;AACf,GAFQ,EAEN,CAACP,YAAY,CAACC,WAAd,CAFM,CAAT;AAGA,sBACE,QAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLA,MAAAA,WAAW,EAAEI,KAAK,CAACJ,WADd;AAELM,MAAAA,cAFK;AAGLM,MAAAA,cAHK;AAILM,MAAAA;AAJK,KADT;AAAA,cAQGf;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAzCM;;GAAMD,a;;KAAAA,a","sourcesContent":["/** @format */\n\nimport React, { createContext, useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\nimport AppReducer from \"./AppReducer\";\nconst initialState = {\n  transaction: [],\n};\nexport const ValueContext = createContext(initialState);\n\nexport const ValueProvider = ({ children }) => {\n  let [state, dispatch] = useReducer(AppReducer, initialState);\n\n  async function getTransaction() {\n    const getTrans = await axios.get(\n      \"http://localhost:4000/api/v1/transactions/\",\n    );\n    dispatch({ type: \"GET\", payload: getTrans.data.transaction });\n  }\n\n  async function newTransaction(newTrans) {\n    const addTrans = await axios.post(\n      \"http://localhost:4000/api/v1/transactions/\",\n      {\n        text: newTrans.text,\n        amount: newTrans.amount,\n      },\n    );\n    dispatch({ type: \"ADD\", payload: addTrans.data.transaction });\n  }\n  async function deleteTransaction(id) {\n    const delTrans = await axios.delete(\n      `http://localhost:4000/api/v1/transactions/${id}`,\n    );\n    dispatch({ type: \"DELETE\", payload: delTrans.data.transaction._id });\n  }\n  useEffect(() => {\n    getTransaction();\n  }, [initialState.transaction]);\n  return (\n    <ValueContext.Provider\n      value={{\n        transaction: state.transaction,\n        getTransaction,\n        newTransaction,\n        deleteTransaction,\n      }}\n    >\n      {children}\n    </ValueContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}