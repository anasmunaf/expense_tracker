{"version":3,"sources":["components/header.js","context/AppReducer.js","context/GlobalState.js","components/balance.js","components/incomeExpense.js","components/tile.js","components/history.js","components/addTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["Header","AppReducer","state","action","type","transaction","payload","filter","arr","_id","initialState","ValueContext","createContext","ValueProvider","children","useReducer","dispatch","getTransaction","a","axios","get","getTrans","data","newTrans","post","text","amount","addTrans","id","delete","delTrans","useEffect","Provider","value","newTransaction","deleteTransaction","Balance","useContext","useState","balnc","setBalnc","map","reduce","acc","current","className","style","fontSize","sum","IncomeExpense","income","expense","Math","abs","color","Tiles","props","notes","marginBottom","onClick","History","AddTransaction","setText","setAmount","onSubmit","e","preventDefault","floor","random","Number","console","log","htmlFor","required","onChange","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5caf232f.chunk.js","sourcesContent":["/** @format */\n\nimport React from \"react\";\n\nconst Header = () => {\n  return (\n    <div>\n      <h1>Expense Tracker</h1>\n    </div>\n  );\n};\n\nexport default Header;\n","/** @format */\n\nconst AppReducer = (state, action) => {\n  switch (action.type) {\n    case \"GET\":\n      return {\n        ...state,\n        transaction: action.payload,\n      };\n    case \"ADD\":\n      return {\n        ...state,\n        transaction: [action.payload, ...state.transaction],\n      };\n    case \"DELETE\":\n      return {\n        ...state,\n        transaction: state.transaction.filter(\n          (arr) => action.payload !== arr._id,\n        ),\n      };\n    default:\n      return state;\n  }\n};\nexport default AppReducer;\n","/** @format */\n\nimport React, { createContext, useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\nimport AppReducer from \"./AppReducer\";\nconst initialState = {\n  transaction: [],\n};\nexport const ValueContext = createContext(initialState);\n\nexport const ValueProvider = ({ children }) => {\n  let [state, dispatch] = useReducer(AppReducer, initialState);\n\n  async function getTransaction() {\n    const getTrans = await axios.get(\n      \"http://localhost:4000/api/v1/transactions/\",\n    );\n    dispatch({ type: \"GET\", payload: getTrans.data.transaction });\n  }\n\n  async function newTransaction(newTrans) {\n    const addTrans = await axios.post(\n      \"http://localhost:4000/api/v1/transactions/\",\n      {\n        text: newTrans.text,\n        amount: newTrans.amount,\n      },\n    );\n    dispatch({ type: \"ADD\", payload: addTrans.data.transaction });\n  }\n  async function deleteTransaction(id) {\n    const delTrans = await axios.delete(\n      `http://localhost:4000/api/v1/transactions/${id}`,\n    );\n    dispatch({ type: \"DELETE\", payload: delTrans.data.transaction._id });\n  }\n  useEffect(() => {\n    getTransaction();\n  }, [initialState.transaction]);\n  return (\n    <ValueContext.Provider\n      value={{\n        transaction: state.transaction,\n        getTransaction,\n        newTransaction,\n        deleteTransaction,\n      }}\n    >\n      {children}\n    </ValueContext.Provider>\n  );\n};\n","/** @format */\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { ValueContext } from \"../context/GlobalState\";\nimport \"../App.css\";\n\nfunction sum(arr) {\n  return arr.reduce((acc, current) => acc + current, 0);\n}\n\nconst Balance = () => {\n  const { transaction } = useContext(ValueContext);\n  let [balnc, setBalnc] = useState(0);\n\n  useEffect(() => {\n    setBalnc(sum(transaction.map((arr) => arr.amount)));\n  }, [transaction]);\n  return (\n    <div className='Balnc'>\n      <p>Your Balance</p>\n      <p style={{ fontSize: \"2em\" }}>${balnc}</p>\n    </div>\n  );\n};\nexport default Balance;\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport { ValueContext } from \"../context/GlobalState\";\nimport \"../App.css\";\n\nfunction sum(arr) {\n  return arr.reduce((acc, current) => acc + current, 0);\n}\nconst IncomeExpense = () => {\n  const { transaction } = useContext(ValueContext);\n  let income = 0;\n  let expense = 0;\n  income = sum(transaction.map((arr) => (arr.amount > 0 ? arr.amount : 0)));\n  expense = sum(transaction.map((arr) => (arr.amount < 0 ? arr.amount : 0)));\n  expense = Math.abs(expense);\n  return (\n    <div>\n      <table className='InEx'>\n        <thead>\n          <tr>\n            <th className='clr'>INCOME</th>\n            <th>EXPENSE</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td className='clr' style={{ color: \"green\" }}>\n              {income}\n            </td>\n            <td style={{ color: \"red\" }}>{expense}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default IncomeExpense;\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport { ValueContext } from \"../context/GlobalState\";\nimport \"../App.css\";\n\nconst Tiles = (props) => {\n  const { deleteTransaction } = useContext(ValueContext);\n  let { id, notes, value } = props;\n  return (\n    <div style={{ marginBottom: \"1em\" }}>\n      <button onClick={() => deleteTransaction(id)} className='btn-del'>\n        X\n      </button>\n      <div className={`tile ${value > 0 ? \"plus\" : \"minus\"}`}>\n        <span>{notes}</span>\n        <span>{value}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Tiles;\n","/** @format */\n\nimport React, { useContext, useEffect } from \"react\";\nimport Tiles from \"./tile\";\nimport { ValueContext } from \"../context/GlobalState\";\n\nimport \"../App.css\";\n\nconst History = () => {\n  const { transaction, getTransaction } = useContext(ValueContext);\n  return (\n    <div>\n      <p className='logoHistory'>HISTORY</p>\n      <div>\n        {transaction.map((arr) => {\n          return (\n            <div key={arr._id}>\n              <Tiles id={arr._id} notes={arr.text} value={arr.amount} />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default History;\n","/** @format */\n\nimport React, { useState, useContext } from \"react\";\nimport { ValueContext } from \"../context/GlobalState\";\nimport \"../App.css\";\n\nconst AddTransaction = () => {\n  let [text, setText] = useState();\n  let [amount, setAmount] = useState(0);\n  const { newTransaction } = useContext(ValueContext);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let transaction = {\n      id: Math.floor(Math.random() * 1000) + 1,\n      text,\n      amount: Number(amount),\n    };\n    newTransaction(transaction);\n    console.log(\"submit\");\n  };\n\n  return (\n    <div>\n      <p className='logoHistory'>ADD TRANSACTION</p>\n      <form onSubmit={onSubmit}>\n        <div className='mb-3'>\n          <label htmlFor='transactionData' className='form-label'>\n            TEXT\n          </label>\n          <input\n            type='text'\n            className='form-control'\n            id='transactionData'\n            required\n            onChange={(e) => {\n              setText(e.target.value);\n            }}\n          />\n        </div>\n        <div className='mb-3'>\n          <label htmlFor='trasactionAmount' className='form-label'>\n            Amount\n          </label>\n          <input\n            type='number'\n            className='form-control'\n            id='trasactionAmount'\n            required\n            onChange={(e) => {\n              setAmount(e.target.value);\n            }}\n          />\n        </div>\n        <button className='btn btn-primary'>Add Transaction</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddTransaction;\n","/** @format */\nimport React, { useContext, useEffect } from \"react\";\nimport Header from \"./components/header\";\nimport Balance from \"./components/balance\";\nimport IncomeExpense from \"./components/incomeExpense\";\nimport History from \"./components/history\";\nimport AddTransaction from \"./components/addTransaction\";\nimport { ValueProvider, ValueContext } from \"./context/GlobalState\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <ValueProvider>\n      <div className='App'>\n        <Header />\n        <Balance />\n        <IncomeExpense />\n        <History />\n        <AddTransaction />\n      </div>\n    </ValueProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}